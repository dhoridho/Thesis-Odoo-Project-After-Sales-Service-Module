<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <record id="hr_rule_basic" model="hr.salary.rule">
            <field name="name">Basic Salary</field>
            <field name="sequence" eval="1"/>
            <field name="code">BASIC</field>
            <field name="category_id" ref="hr_payroll_community.BASIC"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_gaji_pensiun_a1')), (4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_gaji_pensiun_a2'))]"/>
            <field name="bpjs_kesehatan_report">gapok_pensiunan</field>
            <field name="bpjs_ketenagakerjaan_report">upah</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not payslip:
    amount = contract.wage
else:
    amount = payslip.env['hr.payslip'].get_salary(payslip.id, payslip.date_from, payslip.date_to)
    salary = payslip.env['hr.payslip'].get_salary(payslip.id, payslip.date_from, payslip.date_to)
    if payslip.date_from and payslip.date_to:
        if contract.first_contract_date and contract.first_contract_date > payslip.date_from and contract.first_contract_date &lt; payslip.date_to:
            if worked_days.COUNT_FULLY_PRESENT and worked_days.COUNT_LEAVE:
                amount = (worked_days.COUNT_FULLY_PRESENT.number_of_days + worked_days.COUNT_LEAVE.number_of_days) * (salary / worked_days.WORK100.number_of_days)
        elif payslip.termination:
            if contract.date_end and contract.date_end &lt; payslip.date_to:
                if worked_days.COUNT_FULLY_PRESENT and worked_days.COUNT_LEAVE:
                    amount = (worked_days.COUNT_FULLY_PRESENT.number_of_days + worked_days.COUNT_LEAVE.number_of_days) * (salary / worked_days.WORK100.number_of_days)
result = amount</field>
        </record>

        <record id="hr_rule_rapel_salary" model="hr.salary.rule">
            <field name="name">Rapel Salary</field>
            <field name="sequence" eval="2"/>
            <field name="code">RAPEL</field>
            <field name="category_id" ref="hr_payroll_community.Other"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.env['hr.payslip'].get_rapel_salary(payslip.id, payslip.date_from, payslip.date_to)</field>
        </record>
        
        <record id="hr_rule_daily_wage" model="hr.salary.rule">
            <field name="name">Daily Wage</field>
            <field name="sequence" eval="2"/>
            <field name="code">DAILY_WAGE</field>
            <field name="category_id" ref="hr_payroll_community.BASIC"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.daily_wage</field>
        </record>

        <record id="hr_rule_basic_monthly" model="hr.salary.rule">
            <field name="name">Total Gaji Sebulan (Kumulatif)</field>
            <field name="sequence" eval="3"/>
            <field name="code">BASIC_MONTHLY</field>
            <field name="category_id" ref="hr_payroll_community.BASIC"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">amount = 0
if worked_days.COUNT_FULLY_PRESENT and worked_days.COUNT_LEAVE:
    amount = DAILY_WAGE * (worked_days.COUNT_FULLY_PRESENT.number_of_days + worked_days.COUNT_LEAVE.number_of_days)
result = amount</field>
        </record>

        <record id="hr_rule_ump" model="hr.salary.rule">
            <field name="name">UMP</field>
            <field name="sequence" eval="3"/>
            <field name="code">UMP</field>
            <field name="category_id" ref="hr_payroll_community.BASIC"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.province_wage_id:
    amount = employee.province_wage_id.minimum_wage
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_job_allowance" model="hr.salary.rule">
            <field name="name">Job Allowance</field>
            <field name="sequence" eval="4"/>
            <field name="code">JOB_ALW</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.classification_id:
    amount = employee.classification_id.job_allowance
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_attendance_allowance" model="hr.salary.rule">
            <field name="name">Attendance Formula Allowance</field>
            <field name="sequence" eval="4"/>
            <field name="code">ATT_ALW</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.ATT_ALW:
    amount = inputs.ATT_ALW.amount
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_allowance_1" model="hr.salary.rule">
            <field name="name">Allowance 1</field>
            <field name="sequence" eval="5"/>
            <field name="code">ALW1</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not payslip:
    amount = contract.other_allowance_1
else:
    allowance = payslip.env['hr.payslip'].get_allowance(payslip.id, payslip.date_from, payslip.date_to)
    amount = allowance['allowance_1']
result = amount</field>
        </record>

        <record id="hr_rule_rapel_allowance_1" model="hr.salary.rule">
            <field name="name">Rapel Allowance 1</field>
            <field name="sequence" eval="5"/>
            <field name="code">RAPEL_ALW1</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">rapel_allowance = payslip.env['hr.payslip'].get_rapel_allowance(payslip.id, payslip.date_from, payslip.date_to)
result = rapel_allowance['allowance_1']</field>
        </record>

        <record id="hr_rule_tax_alw_reg" model="hr.salary.rule">
            <field name="name">Tunjangan Pajak Reguler</field>
            <field name="sequence" eval="6"/>
            <field name="code">TAX_ALW_REG</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_tunj_pph_a1'))]"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.tunj_pjk_reguler</field>
        </record>

        <record id="hr_rule_tax_alw_irreg" model="hr.salary.rule">
            <field name="name">Tunjangan Pajak Irreguler</field>
            <field name="sequence" eval="7"/>
            <field name="code">TAX_ALW_IRREG</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip')), (4, ref('equip3_hr_payroll_extend_id.bonus_payslip')), (4, ref('equip3_hr_payroll_extend_id.thr_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_tunj_pph_a1'))]"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.tunj_pjk_irreguler</field>
        </record>

        <record id="hr_rule_overtime" model="hr.salary.rule">
            <field name="name">Overtime</field>
            <field name="sequence" eval="8"/>
            <field name="code">OVT_ALW</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_tunj_lainnya_a1'))]"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.OVT:
    amount = inputs.OVT.amount
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_overtime_meal" model="hr.salary.rule">
            <field name="name">Overtime Meal</field>
            <field name="sequence" eval="9"/>
            <field name="code">OVT_MEAL</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.OVT_MEAL:
    amount = inputs.OVT_MEAL.amount
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_thr" model="hr.salary.rule">
            <field name="name">Tunjangan Hari Raya</field>
            <field name="sequence" eval="10"/>
            <field name="code">THR</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip')), (4, ref('equip3_hr_payroll_extend_id.thr_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_irreguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_tatiem_bonus_a1'))]"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">thr_rule = payslip.env['hr.payslip'].compute_thr_rule(payslip.id)
allow_thr = thr_rule["allow_thr"]
thr_additional_rate = thr_rule["thr_additional_rate"]
masa_kerja = thr_rule["masa_kerja"]
if allow_thr == True:
    if thr_additional_rate &gt; 0:
        amount = round((BASIC * thr_additional_rate) / 100)
    elif masa_kerja &lt; 12:
        amount = round(masa_kerja * BASIC) / 12
    else:
        amount = BASIC
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_natura_1" model="hr.salary.rule">
            <field name="name">Kupon Makan/Minum (Natura)</field>
            <field name="sequence" eval="10"/>
            <field name="code">NATURA_1</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="appears_on_report">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_natura_tax" eval="ref('equip3_hr_payroll_extend_id.hr_natura_category_data_1')"/>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_reguler</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not payslip:
    amount = contract.allowance_2
else:
    allowance = payslip.env['hr.payslip'].get_allowance(payslip.id, payslip.date_from, payslip.date_to)
    amount = allowance['allowance_2']
result = amount</field>
        </record>

        <record id="hr_rule_natura_2" model="hr.salary.rule">
            <field name="name">Bingkisan (Natura)</field>
            <field name="sequence" eval="11"/>
            <field name="code">NATURA_2</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="appears_on_report">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_natura_tax" eval="ref('equip3_hr_payroll_extend_id.hr_natura_category_data_2')"/>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_irreguler</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.BINGKISAN:
    amount = inputs.BINGKISAN.amount
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_bonus" model="hr.salary.rule">
            <field name="name">Bonus</field>
            <field name="sequence" eval="11"/>
            <field name="code">BONUS</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip')), (4, ref('equip3_hr_payroll_extend_id.bonus_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category">income_irreguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_tatiem_bonus_a1'))]"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.BONUS:
    amount = inputs.BONUS.amount
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_jkk" model="hr.salary.rule">
            <field name="name">Jaminan Kecelakaan Kerja</field>
            <field name="sequence" eval="12"/>
            <field name="code">JKK</field>
            <field name="category_id" ref="hr_payroll_community.COMP"/>
            <field name="appears_on_payslip">False</field>
            <field name="tax_calculation_method">gross</field>
            <field name="tax_category">income_reguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_premi_asuransi_a1'))]"/>
            <field name="bpjs_ketenagakerjaan_report">iuran_jkk</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = BASIC * 0.0024</field>
        </record>

        <record id="hr_rule_jkm" model="hr.salary.rule">
            <field name="name">Jaminan Kematian</field>
            <field name="sequence" eval="13"/>
            <field name="code">JKM</field>
            <field name="category_id" ref="hr_payroll_community.COMP"/>
            <field name="appears_on_payslip">False</field>
            <field name="tax_calculation_method">gross</field>
            <field name="tax_category">income_reguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_premi_asuransi_a1'))]"/>
            <field name="bpjs_ketenagakerjaan_report">iuran_jkm</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = BASIC * 0.003</field>
        </record>

        <record id="hr_rule_bpjskes_co" model="hr.salary.rule">
            <field name="name">BPJS Kesehatan Company</field>
            <field name="sequence" eval="14"/>
            <field name="code">BPJS_KES_CO</field>
            <field name="category_id" ref="hr_payroll_community.COMP"/>
            <field name="appears_on_payslip">False</field>
            <field name="tax_calculation_method">gross</field>
            <field name="tax_category">income_reguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_premi_asuransi_a1'))]"/>
            <field name="bpjs_kesehatan_report">iuran_perusahaan</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">bpjs_kesehatan_limit = payslip.env['hr.payslip'].get_bpjs_kesehatan_limit()
if employee.bpjs_kesehatan_date:
    amount = 0
    if BASIC &lt; bpjs_kesehatan_limit:
        amount = BASIC * 0.04
    else:
        amount = bpjs_kesehatan_limit * 0.04
    if employee.bpjs_kesehatan_date &gt;= payslip.date_from and employee.bpjs_kesehatan_date &lt;= payslip.date_to:
        result = amount
    elif employee.bpjs_kesehatan_date &lt; payslip.date_from:
        result = amount
    else:
        result = 0
else:
    result = 0</field>
        </record>

        <record id="hr_rule_rapel_bpjskes_co" model="hr.salary.rule">
            <field name="name">Rapel BPJS Company</field>
            <field name="sequence" eval="15"/>
            <field name="code">RAPEL_BPJS_COMP</field>
            <field name="category_id" ref="hr_payroll_community.Other"/>
            <field name="appears_on_payslip">False</field>
            <field name="tax_calculation_method">gross</field>
            <field name="tax_category">income_reguler</field>
            <field name="spt_category_ids" eval="[(4, ref('equip3_hr_payroll_extend_id.hr_spt_cat_premi_asuransi_a1'))]"/>
            <field name="bpjs_kesehatan_report">iuran_perusahaan</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.env['hr.payslip'].get_rapel_bpjs_comp(payslip.id, payslip.date_from, payslip.date_to, BPJS_KES_CO)</field>
        </record>

        <record id="hr_rule_jht_co" model="hr.salary.rule">
            <field name="name">JHT Company</field>
            <field name="sequence" eval="16"/>
            <field name="code">JHT_CO</field>
            <field name="category_id" ref="hr_payroll_community.COMP"/>
            <field name="appears_on_payslip">False</field>
            <field name="tax_calculation_method">gross</field>
            <field name="tax_category" eval=""/>
            <field name="bpjs_ketenagakerjaan_report">iuran_jht_pemberi_kerja</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.bpjs_ketenagakerjaan_date:
    amount = BASIC * 0.037
    if employee.bpjs_ketenagakerjaan_date &gt;= payslip.date_from and employee.bpjs_ketenagakerjaan_date &lt;= payslip.date_to:
        result = amount
    elif employee.bpjs_ketenagakerjaan_date &lt; payslip.date_from:
        result = amount
    else:
        result = 0
else:
    result = 0</field>
        </record>

        <record id="hr_rule_jp_co" model="hr.salary.rule">
            <field name="name">Jaminan Pensiun Company</field>
            <field name="sequence" eval="17"/>
            <field name="code">JP_CO</field>
            <field name="category_id" ref="hr_payroll_community.COMP"/>
            <field name="appears_on_payslip">False</field>
            <field name="tax_calculation_method">gross</field>
            <field name="tax_category" eval=""/>
            <field name="bpjs_ketenagakerjaan_report">iuran_jp_pemberi_kerja</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">jaminan_pensiun_limit = payslip.env['hr.payslip'].get_jaminan_pensiun_limit()
limit_age_bpjs = payslip.env['hr.payslip'].get_limit_age_bpjs()
if employee.birth_years &gt;= limit_age_bpjs:
    result = 0
else:
    if BASIC &lt; jaminan_pensiun_limit:
        result = BASIC * 0.02
    else:
        result = jaminan_pensiun_limit * 0.02</field>
        </record>

        <record id="hr_rule_absent_deduction" model="hr.salary.rule">
            <field name="name">Absent Deduction</field>
            <field name="sequence" eval="18"/>
            <field name="code">ABS_DED</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">amount = 0
if worked_days.COUNT_ABSENT:
    amount = worked_days.COUNT_ABSENT.number_of_days * (BASIC / worked_days.WORK100.number_of_days)
else:
    amount = 0
result = amount</field>
        </record>

        <record id="hr_rule_late_deduction" model="hr.salary.rule">
            <field name="name">Late Deduction</field>
            <field name="sequence" eval="19"/>
            <field name="code">LATE_DED</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.total_late_amount</field>
        </record>

        <record id="hr_rule_bpjskes_emp" model="hr.salary.rule">
            <field name="name">BPJS Kesehatan Employee</field>
            <field name="sequence" eval="20"/>
            <field name="code">BPJS_KES_EMP</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="bpjs_kesehatan_report">iuran_pegawai</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">bpjs_kesehatan_limit = payslip.env['hr.payslip'].get_bpjs_kesehatan_limit()
if employee.bpjs_kesehatan_date:
    amount = 0
    if BASIC &lt; bpjs_kesehatan_limit:
        amount = BASIC * 0.01
    else:
        amount = bpjs_kesehatan_limit * 0.01
    if employee.bpjs_kesehatan_date &gt;= payslip.date_from and employee.bpjs_kesehatan_date &lt;= payslip.date_to:
        result = amount
    elif employee.bpjs_kesehatan_date &lt; payslip.date_from:
        result = amount
    else:
        result = 0
else:
    result = 0</field>
        </record>

        <record id="hr_rule_jht_emp" model="hr.salary.rule">
            <field name="name">JHT Employee</field>
            <field name="sequence" eval="21"/>
            <field name="code">JHT_EMP</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category">deduction</field>
            <field name="bpjs_ketenagakerjaan_report">iuran_jht_pekerja</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.bpjs_ketenagakerjaan_date:
    amount = BASIC * 0.02
    if employee.bpjs_ketenagakerjaan_date &gt;= payslip.date_from and employee.bpjs_ketenagakerjaan_date &lt;= payslip.date_to:
        result = amount
    elif employee.bpjs_ketenagakerjaan_date &lt; payslip.date_from:
        result = amount
    else:
        result = 0
else:
    result = 0</field>
        </record>

        <record id="hr_rule_jp_emp" model="hr.salary.rule">
            <field name="name">Jaminan Pensiun Employee</field>
            <field name="sequence" eval="22"/>
            <field name="code">JP_EMP</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category">deduction</field>
            <field name="bpjs_ketenagakerjaan_report">iuran_jp_pekerja</field>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">jaminan_pensiun_limit = payslip.env['hr.payslip'].get_jaminan_pensiun_limit()
limit_age_bpjs = payslip.env['hr.payslip'].get_limit_age_bpjs()
if employee.birth_years &gt;= limit_age_bpjs:
    result = 0
else:
    if BASIC &lt; jaminan_pensiun_limit:
        result = BASIC * 0.01
    else:
        result = jaminan_pensiun_limit * 0.01</field>
        </record>

        <record id="hr_rule_pph21_reg" model="hr.salary.rule">
            <field name="name">PPh21 Reguler</field>
            <field name="sequence" eval="31"/>
            <field name="code">PPH21_REG</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.pjk_bln_reguler + payslip.pjk_bln_reguler_gross</field>
        </record>

        <record id="hr_rule_pph21_irreg" model="hr.salary.rule">
            <field name="name">PPh21 Irreguler</field>
            <field name="sequence" eval="32"/>
            <field name="code">PPH21_IRREG</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip')), (4, ref('equip3_hr_payroll_extend_id.bonus_payslip')), (4, ref('equip3_hr_payroll_extend_id.thr_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.pjk_bln_irreguler + payslip.pjk_bln_irreguler_gross</field>
        </record>

        <record id="hr_rule_pph26" model="hr.salary.rule">
            <field name="name">PPh26</field>
            <field name="sequence" eval="35"/>
            <field name="code">PPH26</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.pjk_pph26</field>
        </record>

        <record id="hr_rule_thp" model="hr.salary.rule">
            <field name="name">Take Home Pay</field>
            <field name="sequence" eval="100"/>
            <field name="code">THP</field>
            <field name="category_id" ref="hr_payroll_community.NET"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip')), (4, ref('equip3_hr_payroll_extend_id.bonus_payslip')), (4, ref('equip3_hr_payroll_extend_id.thr_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">take_home_Pay</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.BASIC + categories.ALW + categories.Other - categories.DED</field>
        </record>

        <record id="hr_rule_bruto_pesangon" model="hr.salary.rule">
            <field name="name">Bruto Pesangon</field>
            <field name="sequence" eval="25"/>
            <field name="code">BRT_PES</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.bruto_pesangon</field>
        </record>

        <record id="hr_rule_pph21_pesangon" model="hr.salary.rule">
            <field name="name">PPh21 Pesangon</field>
            <field name="sequence" eval="31"/>
            <field name="code">PPH21_PES</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.pph21_pesangon</field>
        </record>

        <record id="hr_rule_thp_pesangon" model="hr.salary.rule">
            <field name="name">THP Pesangon</field>
            <field name="sequence" eval="100"/>
            <field name="code">THPP</field>
            <field name="category_id" ref="hr_payroll_community.NET"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip')), (4, ref('equip3_hr_payroll_extend_id.bonus_payslip')), (4, ref('equip3_hr_payroll_extend_id.thr_payslip'))]"/>
            <field name="tax_calculation_method">gross</field>
            <field name="category_on_payslip">take_home_Pay</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = BRT_PES - PPH21_PES</field>
        </record>

        <record id="hr_rule_pph21_ter" model="hr.salary.rule">
            <field name="name">PPh21 TER</field>
            <field name="sequence" eval="31"/>
            <field name="code">PPH21_TER</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method" eval=""/>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.tax_calculation_method == "Gross-Up":
    result = payslip.ter_pjk_bln
else:
    result = payslip.ter_pjk_bln_gross</field>
        </record>

        <record id="hr_rule_pph21_ter_mix" model="hr.salary.rule">
            <field name="name">PPh21 TER Mix</field>
            <field name="sequence" eval="32"/>
            <field name="code">PPH21_TER_MIX</field>
            <field name="category_id" ref="hr_payroll_community.DED"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method" eval=""/>
            <field name="category_on_payslip">deduction</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.tax_period_length == payslip.tax_end_month:
    result = payslip.ter_pjk_bln_gross
else:
    result = payslip.ter_pjk_bln - payslip.ter_pjk_bln_gross</field>
        </record>

        <record id="hr_rule_pph21_ter_alw" model="hr.salary.rule">
            <field name="name">Tunjangan PPH21 TER</field>
            <field name="sequence" eval="32"/>
            <field name="code">PPH21_TER_ALW</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method" eval=""/>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.ter_tunj_pjk_bln</field>
        </record>

        <record id="hr_rule_ter_tunj_pph21_natura_gross" model="hr.salary.rule">
            <field name="name">Tunjangan PPh21 Atas Natura Gross</field>
            <field name="sequence" eval="33"/>
            <field name="code">TUNJ_PPH21_NATURA_GROSS</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method" eval=""/>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.ter_pjk_natura_gross</field>
        </record>

        <record id="hr_rule_ter_tunj_pph21_natura_grossup" model="hr.salary.rule">
            <field name="name">Tunjangan PPh21 Atas Natura Gross Up</field>
            <field name="sequence" eval="34"/>
            <field name="code">TUNJ_PPH21_NATURA_GROSSUP</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method" eval=""/>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.ter_pjk_natura</field>
        </record>

        <record id="hr_rule_ter_tunj_pph21_natura_mixed" model="hr.salary.rule">
            <field name="name">Tunjangan PPh 21 Atas Natura Mixed</field>
            <field name="sequence" eval="35"/>
            <field name="code">TUNJ_PPH21_NATURA_MIXED</field>
            <field name="category_id" ref="hr_payroll_community.ALW"/>
            <field name="appears_on_payslip">True</field>
            <field name="payslip_type" eval="[(4, ref('equip3_hr_payroll_extend_id.employee_payslip'))]"/>
            <field name="tax_calculation_method" eval=""/>
            <field name="category_on_payslip">income</field>
            <field name="tax_category" eval=""/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = payslip.ter_pjk_natura - payslip.ter_pjk_natura_gross</field>
        </record>

        <!-- Equip Salary Structure -->

         <record id="equip_structure_base" model="hr.payroll.structure">
            <field name="code">BASE_STR</field>
            <field name="name">Equip Base Structures</field>
            <field name="parent_id" eval=""/>
            <field eval="[(6, 0, [ref('hr_rule_basic'), ref('hr_rule_rapel_salary'), ref('hr_rule_daily_wage'), ref('hr_rule_ump'),
            ref('hr_rule_job_allowance'), ref('hr_rule_allowance_1'), ref('hr_rule_rapel_allowance_1'), ref('hr_rule_tax_alw_reg'),
            ref('hr_rule_tax_alw_irreg'),ref('hr_rule_overtime'), ref('hr_rule_overtime_meal'), ref('hr_rule_thr'),
            ref('hr_rule_bonus'),ref('hr_rule_jkk'),ref('hr_rule_jkm'),ref('hr_rule_bpjskes_co'),ref('hr_rule_rapel_bpjskes_co'),
            ref('hr_rule_jht_co'),ref('hr_rule_jp_co'),ref('hr_rule_absent_deduction'), ref('hr_rule_late_deduction'),
            ref('hr_rule_bpjskes_emp'),ref('hr_rule_jht_emp'),ref('hr_rule_jp_emp'),
            ref('hr_rule_pph21_reg'),ref('hr_rule_pph21_irreg'),ref('hr_rule_thp')])]" name="rule_ids"/>
            <field name="company_id" ref="base.main_company"/>
        </record>

        <record id="equip_structure_pesangon" model="hr.payroll.structure">
            <field name="code">PESANGON_STR</field>
            <field name="name">Equip Pesangon Structures</field>
            <field name="parent_id" eval=""/>
            <field eval="[(6, 0, [ref('hr_rule_basic'), ref('hr_rule_bruto_pesangon'), ref('hr_rule_pph21_pesangon'),
            ref('hr_rule_thp_pesangon')])]" name="rule_ids"/>
            <field name="company_id" ref="base.main_company"/>
        </record>

    </data>
</odoo>
